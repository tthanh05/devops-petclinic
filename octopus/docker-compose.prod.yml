# octopus/docker-compose.prod.yml
# Compose v2 syntax (no top-level version key required)
# NOTE: Octopus will substitute #{ImageTag} and #{ServerPort} (via "Substitute Variables in Files" step).

services:
  db:
    image: mysql:8.0
    container_name: petclinic_db
    environment:
      MYSQL_ROOT_PASSWORD: "petclinic"
      MYSQL_DATABASE: "petclinic"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-ppetclinic"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  app:
    image: "spring-petclinic:#{ImageTag}"   # Jenkins passes ImageTag to Octopus; Octopus substitutes here
    container_name: petclinic_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: "mysql"
      spring.datasource.url: "jdbc:mysql://db:3306/petclinic?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
      spring.datasource.username: "root"
      spring.datasource.password: "petclinic"
      SERVER_PORT: "8080"
    ports:
      - "#{ServerPort}:8080"                # Octopus substitutes
    restart: unless-stopped

volumes:
  mysql-data:
