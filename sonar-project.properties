# ---- Identity ----
sonar.projectKey=spring-petclinic
sonar.projectName=Spring Petclinic
# Useful if you want the build number/short SHA injected by Jenkins
# sonar.projectVersion=${env.BUILD_NUMBER}-${env.GIT_COMMIT:0:7}

# ---- Server URL (do NOT put tokens in this file) ----
sonar.host.url=http://localhost:9000
# DO NOT commit credentials/tokens here. Pass with -Dsonar.login in Jenkins.

# ---- Sources & Tests ----
sonar.sources=src/main/java
sonar.tests=src/test/java
sonar.sourceEncoding=UTF-8
sonar.scm.provider=git

# ---- Java binaries (needed for rules like S1871 etc.) ----
sonar.java.binaries=target/classes

# ---- Test report locations ----
# Surefire (unit tests)
sonar.junit.reportPaths=target/surefire-reports
# Failsafe (integration tests) – same property supports both folders
sonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports

# ---- Coverage (use JaCoCo XML) ----
# Make sure your Jenkinsfile runs `mvn jacoco:report` so this file exists:
# target/site/jacoco/jacoco.xml
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

# ---- Exclusions (typical for Spring Boot apps) ----
sonar.exclusions=\
  **/target/**,\
  **/build/**,\
  **/*Application.java,\
  **/config/**,\
  **/generated/**,\
  **/resources/**

# Optional: don’t measure coverage on DTOs/config/etc.
sonar.coverage.exclusions=\
  **/*Application.java,\
  **/config/**,\
  **/dto/**,\
  **/model/**

# Optional: narrow Java files only (Sonar auto-detects, so this isn’t required)
# sonar.inclusions=src/main/java/**/*.java
