version: "3.8"
services:
  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node-exporter
    network_mode: host
    networks:
      - monitoring
    pid: host
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro,rslave

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitoring
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    depends_on:
      - node-exporter

  alertmanager:
    image: prom/alertmanager:v0.27.0
    env_file:
      - /opt/monitoring/secrets/alertmanager.env
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --config.expand-env 
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - ALERT_FROM_EMAIL=${ALERT_FROM_EMAIL:-}
      - ALERT_TO_EMAIL=${ALERT_TO_EMAIL:-}

  # Optional Grafana for visual dashboards
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana:/var/lib/grafana
volumes:
  grafana:

networks:
  monitoring:
    external: true 
